diff --git a/node_modules/oclif/lib/commands/pack/win.js b/node_modules/oclif/lib/commands/pack/win.js
index c0926bd..e4f645c 100644
--- a/node_modules/oclif/lib/commands/pack/win.js
+++ b/node_modules/oclif/lib/commands/pack/win.js
@@ -59,6 +59,12 @@ InstallDir "\$PROGRAMFILES${arch === 'x64' ? '64' : ''}\\${config.dirname}"
 ${customization}
 
 Section "${config.name} CLI \${VERSION}"
+  ; First remove any old client files.
+  ; (Remnants of old versions were causing CLI errors)
+  ; Initially tried running the Uninstall.exe, but was
+  ; unable to make script wait for completion (despite using _?)
+  DetailPrint "Removing files from previous version."
+  RMDir /r "$INSTDIR\\client"
   SetOutPath $INSTDIR
   File /r bin
   File /r client
diff --git a/node_modules/oclif/lib/tarballs/build.js b/node_modules/oclif/lib/tarballs/build.js
index 384ea4b..c9607f3 100644
--- a/node_modules/oclif/lib/tarballs/build.js
+++ b/node_modules/oclif/lib/tarballs/build.js
@@ -30,7 +30,9 @@ async function build(c, options = {}) {
         await fs.emptyDir(c.workspace());
         const tarballNewLocation = path.join(c.workspace(), path.basename(tarball));
         await fs.move(tarball, tarballNewLocation);
-        await exec(`tar -xzf "${tarballNewLocation}"`, { cwd: c.workspace() });
+        let tarCmd = `tar -xzf "${tarballNewLocation}"`;
+        if (process.platform === 'win32') tarCmd += ' --force-local';
+        await exec(tarCmd, { cwd: c.workspace() });
         await Promise.all((await fs.promises.readdir(path.join(c.workspace(), 'package'), { withFileTypes: true }))
             .map(i => fs.move(path.join(c.workspace(), 'package', i.name), path.join(c.workspace(), i.name))));
         await Promise.all([
@@ -38,6 +40,11 @@ async function build(c, options = {}) {
             fs.promises.rm(path.join(c.workspace(), path.basename(tarball)), { recursive: true }),
             fs.remove(path.join(c.workspace(), 'bin', 'run.cmd')),
         ]);
+        // The oclif installers are a production installation, while the source
+        // `bin` folder may contain a `.fast-boot.json` file of a dev installation.
+        // This has previously led to issues preventing the CLI from starting, so
+        // delete `.fast-boot.json` (if any) from the destination folder.
+        await fs.promises.rm(path.join(c.workspace(), 'bin', '.fast-boot.json'));
     };
     const updatePJSON = async () => {
         const pjsonPath = path.join(c.workspace(), 'package.json');
